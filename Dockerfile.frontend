# Multi-stage build для React приложения
# Stage 1: Build
FROM node:20-alpine as builder

WORKDIR /app

# Копирование package файлов
COPY frontend/package*.json ./
COPY frontend/yarn.lock ./

# Установка зависимостей
RUN yarn install --frozen-lockfile

# Копирование исходного кода
COPY frontend/ .

# Сборка приложения для production
RUN yarn build

# Stage 2: Production
FROM nginx:alpine

# Копирование кастомной конфигурации Nginx
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

# Копирование собранного приложения
COPY --from=builder /app/build /usr/share/nginx/html

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

EXPOSE 3000

CMD ["nginx", "-g", "daemon off;"]